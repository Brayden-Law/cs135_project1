#include <iostream>
#include <string>
#include <stdio.h>
#include <cstdlib> 
#include <ctime>

using namespace std;
#define y 0
#define x 1

void commands()
{
    std::cout << "w to move up" << std::endl; 
    std::cout << "s to move down" << std::endl; 
    std::cout << "a to move left" << std::endl; 
    std::cout << "d to move right" << std::endl; 
    std::cout << std::endl;
    std::cout << "W to attack up" << std::endl; 
    std::cout << "S to attack down" << std::endl; 
    std::cout << "A to attack left" << std::endl; 
    std::cout << "D to attack right" << std::endl; 
    std::cout << std::endl;
}

void display_map(char abc[40][40], int player[2])
{
    std::cout << abc[player[y] - 2][player[x] - 2] << abc[player[y] - 2][player[x] - 1] << abc[player[y] - 2][player[x]    ] << abc[player[y] - 2][player[x] + 1] << abc[player[y] - 2][player[x] + 2] << std::endl;
    std::cout << abc[player[y] - 1][player[x] - 2] << abc[player[y] - 1][player[x] - 1] << abc[player[y] - 1][player[x]    ] << abc[player[y] - 1][player[x] + 1] << abc[player[y] - 1][player[x] + 2] << std::endl;
    std::cout << abc[player[y]    ][player[x] - 2] << abc[player[y]    ][player[x] - 1] << 'X'                               << abc[player[y]    ][player[x] + 1] << abc[player[y]    ][player[x] + 2] << std::endl;
    std::cout << abc[player[y] + 1][player[x] - 2] << abc[player[y] + 1][player[x] - 1] << abc[player[y] + 1][player[x]    ] << abc[player[y] + 1][player[x] + 1] << abc[player[y] + 1][player[x] + 2] << std::endl;
    std::cout << abc[player[y] + 2][player[x] - 2] << abc[player[y] + 2][player[x] - 1] << abc[player[y] + 2][player[x]    ] << abc[player[y] + 2][player[x] + 1] << abc[player[y] + 2][player[x] + 2] << std::endl;
    std::cout << std::endl;
}

bool enemy_move(int (&enemy)[2], int player[2], char (&map)[40][40], int& wander, int& wander_multi)
{

    int randomNum = 0;
    int vect_x = player[x] - enemy[x];
    int vect_y = player[y] - enemy[y];

    if(enemy[y] == player[y] && enemy[x] == player[x])
    {
        return false;
    }else if(wander > 0)
    {   
        do
        {
            srand(time(0));
            randomNum = rand() % 4;
            if(map[enemy[y] - 1][enemy[x]] == ' ' && randomNum == 0)
            {
                //up
                map[enemy[y]][enemy[x]] = ' ';
                enemy[y] -= 1;
                map[enemy[y]][enemy[x]] = '!';
                wander -= 1;
                return true;

            }if(map[enemy[y] + 1][enemy[x]] == ' ' && randomNum == 1)
            {
                //down
                map[enemy[y]][enemy[x]] = ' ';
                enemy[y] += 1;
                map[enemy[y]][enemy[x]] = '!';
                wander -= 1;
                return true;

            }if(map[enemy[y]][enemy[x] + 1] == ' ' && randomNum == 2)
            {
                //right
                map[enemy[y]][enemy[x]] = ' ';
                enemy[x] += 1;
                map[enemy[y]][enemy[x]] = '!';
                wander -= 1;
                return true;

            }if(map[enemy[y]][enemy[x] - 1] == ' ' && randomNum == 3)
            {
                //left
                map[enemy[y]][enemy[x]] = ' ';
                enemy[x] -= 1;
                map[enemy[y]][enemy[x]] = '!';
                wander -= 1;
                return true;
            }

        }while(true);
    }else if(vect_y < 0 && map[enemy[y] - 1][enemy[x]] == ' ')
    {
        //up
        map[enemy[y]][enemy[x]] = ' ';
        enemy[y] -= 1;
        map[enemy[y]][enemy[x]] = '!';
        wander_multi -= 1;
        return true;

    }else if(vect_y > 0 && map[enemy[y] + 1][enemy[x]] == ' ')
    {
        //down
        map[enemy[y]][enemy[x]] = ' ';
        enemy[y] += 1;
        map[enemy[y]][enemy[x]] = '!';
        wander_multi -= 1;
        return true;


    }else if(vect_x > 0 && map[enemy[y]][enemy[x] + 1] == ' ')
    {
        //right
        map[enemy[y]][enemy[x]] = ' ';
        enemy[x] += 1;
        map[enemy[y]][enemy[x]] = '!';
        wander_multi -= 1;
        return true;

    }else if(vect_x < 0 && map[enemy[y]][enemy[x] - 1] == ' ')
    {
        //left
        map[enemy[y]][enemy[x]] = ' ';
        enemy[x] -= 1;
        map[enemy[y]][enemy[x]] = '!';
        wander_multi -= 1;
        return true;
    }
    else
    {
        wander += wander_multi;
        wander_multi += 1;
    }
    return true;
}














int main()
{   
    int player[2] = {36, 3};
    char ch;
    std::string temp;

    int enemy_1[2] = {3, 3};
    int enemy_1_wander = 0;
    int enemy_1_wander_multi = 1;

    char map[40][40] = 
    {
        {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
        {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', '!', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', '0', '0', '0', '0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', '0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', '0', '0', ' ', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', '0', ' ', '0', '0', '0', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', ' ', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', '0', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', '0', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', ' ', ' ', ' ', '0', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0', '0'},
        {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
        {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'}
    };

    while(true)
    {
        commands();
        display_map(map, player);

        std::getline(cin, temp);
        ch = temp[0];
        temp = " ";
    
        switch(ch)
        {
            case 'w':
                if(map[player[y] - 1][player[x]] == ' ')
                {
                    player[y] -= 1;
                }
                break;

            case 's':
                if(map[player[y] + 1][player[x]] == ' ')
                {
                    player[y] += 1;
                }
                break;

            case 'a':
                if(map[player[y]][player[x] - 1] == ' ')
                {
                    player[x] -= 1;
                }
                break;

            case 'd':
                if(map[player[y]][player[x] + 1] == ' ')
                {
                    player[x] += 1;
                }
                break;

            case 'W':
                break;
            case 'S':
                break;
            case 'A':
                break;
            case 'D':
                break; 
            default:
                break; 
        }

        enemy_move(enemy_1, player, map, enemy_1_wander, enemy_1_wander_multi);


    }
   






}